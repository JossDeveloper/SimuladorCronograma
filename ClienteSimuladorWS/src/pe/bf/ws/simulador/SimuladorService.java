
package pe.bf.ws.simulador;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "SimuladorService", targetNamespace = "http://pe.company.com/Simulador/")
public class SimuladorService extends Service
{
    private final static URL SIMULADORSERVICE_WSDL_LOCATION;
    private final static WebServiceException SIMULADORSERVICE_EXCEPTION;
    private final static QName SIMULADORSERVICE_QNAME = new QName("http://pe.company.com/Simulador", "SimuladorService");
    private static final Logger logger = Logger.getLogger(SimuladorService.class.getName());

    static 
    {
        URL url = null;
        WebServiceException e = null;
        try 
        {
        	URL baseUrl = SimuladorService.class.getResource(".");
            url = new URL(baseUrl, System.getProperty("SERVER_WS_SIMULADOR") + "/SimuladorWS/SimuladorService?WSDL");
        } 
        catch (MalformedURLException ex) 
        {
            e = new WebServiceException(ex);
            logger.warning("Failed to create URL for the wsdl Location: '" + System.getProperty("SERVER_WS_SIMULADOR") + "/SimuladorWS/SimuladorService?WSDL");
            logger.warning(e.getMessage());
        }
        SIMULADORSERVICE_WSDL_LOCATION = url;
        SIMULADORSERVICE_EXCEPTION = e;
    }

    public SimuladorService() 
    {
        super(__getWsdlLocation(), SIMULADORSERVICE_QNAME);
    }

    public SimuladorService(WebServiceFeature... features) 
    {
        super(__getWsdlLocation(), SIMULADORSERVICE_QNAME, features);
    }

    public SimuladorService(URL wsdlLocation) 
    {
        super(wsdlLocation, SIMULADORSERVICE_QNAME);
    }

    public SimuladorService(URL wsdlLocation, WebServiceFeature... features) 
    {
        super(wsdlLocation, SIMULADORSERVICE_QNAME, features);
    }

    public SimuladorService(URL wsdlLocation, QName serviceName) 
    {
        super(wsdlLocation, serviceName);
    }

    public SimuladorService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) 
    {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns SimuladorPt
     */
    @WebEndpoint(name = "SimuladorPtPort")
    public SimuladorPt getSimuladorPtPort() 
    {
        return super.getPort(new QName("http://pe.company.com/Simulador", "SimuladorPtPort"), SimuladorPt.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SimuladorPt
     */
    @WebEndpoint(name = "SimuladorPtPort")
    public SimuladorPt getSimuladorPtPort(WebServiceFeature... features) 
    {
        return super.getPort(new QName("http://pe.company.com/Simulador/", "SimuladorPtPort"), SimuladorPt.class, features);
    }

    private static URL __getWsdlLocation() 
    {
        if (SIMULADORSERVICE_EXCEPTION!= null) 
        {
            throw SIMULADORSERVICE_EXCEPTION;
        }
        return SIMULADORSERVICE_WSDL_LOCATION;
    }

}
